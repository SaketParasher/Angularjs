
/***********************************************       DIRECTIVES       ******************************************/

1) ng-src       ---> It delays the requesting of image until angular has a chance to replace ng-src text with the actual url of the image.
2) ng-change    ---> It executes each time input field value is changed but ng-model must be present on that input field.
3) ng-bind      ---> used as an alernative to expression binding ie. we can use ng-bind="event.name" instead of {{event.name}}
4) ng-bind-html ---> used to populate content of an element ie. a tag <> with the value of a variable .
                     ie. ng-bind-html="snippet" . html content of this tag will be replaced by html value of snippet variable.
5) ng-cloak     ---> hide a portion or all page until angular resolves all the bindings and expressions otherwise we will get a flash of bindings.
6) ng-style     ---> ng-style='varName' and varName is attached to scope in controller which contains css like object.
7) ng-class     ---> ng-class="className" . add the style on className in css file.

8) ng-disabled  ---> ng-disabled="value" element will be disabled or enabled based on the value which comes from controller.
9) ng-submit    ---> ng-submit="function()" will call the function() when the form is submitted.
10) ngNonBindable--> will not bind the expression and will print the same expression as it is.

** Never update DOM from controller do it by using directives. 

/***********************************************       FILTERS       ******************************************/

1) uppercase
2) lowercase
3) number , currency  3.147855 | number:2(two decimal places)  o/p--> 3.14
4) date     :- pass milliseconds | date:'medium' 
5) json     :- prints the data in json format
6) orderBy  :- orders the dataset in a particular sequence based on the parameter passed.
7) limitTo  :- limits the records to a certain number
8) filter   :- filters a dataset by an expression


/***********************************************       SERVICES       ******************************************/

--> Services allows us to encapsulate reusable business logic into an object that can be shared and reused throughout your application.
--> Allows us to breakup our whole application into smaller pieces.
--> Dependency Injection ie. we can inject our services into another services and controllers

1) $http
2) $resource
3) $cacheFactory --> used to cache data and can have maximum capacity. If item more than its capacity is added then first item gets removed and item gets                          added in last.

--> angular.element('className or id') is used to select an element same as jquery.

4) $parse --> used to convert a expression into function

5) $routeProvider --> used to set the routing and is passed as argument to the callback function of config() where all routes are configured.

6) $routeParams  --> used in controller to get the route parameter and while configuring the route then if any param is variable then we write
                     /events/:eventId . now we can access eventId in controller by using $routeParams.eventId.
                     
7) $route      -->  used to get any custom property from the route. And we access that custom property in controller by $route.current.propertyName
               -->  to get the queryString from routeURL we use $route.current.params.queryVariableName
               --> we can also use $route.currnt.pathParams.propertyName but pathParams only gives the variables which are part of route URL not                 queryString.

8) resolve  -->  resolve in routing is an object which is used to fetch data by injecting service and which returns a promise then we add that method name 
                 in the controller and then assign the value of $scope to be equal to that method name. It will hit the route but the controller will not 
                 execute and page will not get rendered untill data is fetched ie. until that promise is resolved.








